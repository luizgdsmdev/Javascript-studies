{
  "1": [
    {
      "type": 1,
      "level": "easy",
      "question": [
        {
          "question": "Arrays in JavaScript can store elements of different types, such as numbers, strings, and objects.",
          "answer": true
        }
      ]
    },
    {
      "type": 1,
      "level": "easy",
      "question": [
        {
          "question": "The `.length` property of an array returns the number of elements, including undefined ones in sparse arrays.",
          "answer": true
        }
      ]
    },
    {
      "type": 1,
      "level": "easy",
      "question": [
        {
          "question": "Arrays in JavaScript are immutable, meaning their elements cannot be changed directly.",
          "answer": false
        }
      ]
    },
    {
      "type": 1,
      "level": "easy",
      "question": [
        {
          "question": "An empty array has a `.length` of 0.",
          "answer": true
        }
      ]
    },
    {
      "type": 1,
      "level": "easy",
      "question": [
        {
          "question": "The `typeof` operator returns 'array' for an array in JavaScript.",
          "answer": false
        }
      ]
    },
    {
      "type": 1,
      "level": "easy",
      "question": [
        {
          "question": "Arrays in JavaScript can be created using the `Array` constructor.",
          "answer": true
        }
      ]
    },
    {
      "type": 1,
      "level": "easy",
      "question": [
        {
          "question": "The first element of an array is accessed with index 1.",
          "answer": false
        }
      ]
    },
    {
      "type": 1,
      "level": "easy",
      "question": [
        {
          "question": "An array declared with `const` can have its elements modified.",
          "answer": true
        }
      ]
    },
    {
      "type": 1,
      "level": "easy",
      "question": [
        {
          "question": "Accessing an array with an index that does not exist returns `undefined`.",
          "answer": true
        }
      ]
    },
    {
      "type": 1,
      "level": "easy",
      "question": [
        {
          "question": "Arrays in JavaScript are always stored as copies when assigned to a new variable.",
          "answer": false
        }
      ]
    }
  ],
  "2": [
    {
      "type": 1,
      "level": "medium",
      "question": [
        {
          "question": "Assigning an array to a new variable creates a reference to the same array in memory.",
          "answer": true
        }
      ]
    },
    {
      "type": 1,
      "level": "medium",
      "question": [
        {
          "question": "The `.slice()` method modifies the original array.",
          "answer": false
        }
      ]
    },
    {
      "type": 1,
      "level": "medium",
      "question": [
        {
          "question": "The `.splice()` method can be used to add elements to an array without removing any.",
          "answer": true
        }
      ]
    },
    {
      "type": 1,
      "level": "medium",
      "question": [
        {
          "question": "The `.at()` method supports negative indices to access elements from the end of an array.",
          "answer": true
        }
      ]
    },
    {
      "type": 1,
      "level": "medium",
      "question": [
        {
          "question": "The `.forEach()` method always returns a new array with the results of the callback function.",
          "answer": false
        }
      ]
    },
    {
      "type": 1,
      "level": "medium",
      "question": [
        {
          "question": "The `.unshift()` method adds elements to the beginning of an array and returns the new length.",
          "answer": true
        }
      ]
    },
    {
      "type": 1,
      "level": "medium",
      "question": [
        {
          "question": "The `.shift()` method removes the last element of an array.",
          "answer": false
        }
      ]
    },
    {
      "type": 2,
      "level": "medium",
      "question": [
        {
          "question": "What is the result of `let arr = [1, 2, 3]; console.log(arr.unshift(0));`?",
          "options": {
            "1": "[0, 1, 2, 3]",
            "2": "4",
            "3": "[1, 2, 3, 0]",
            "4": "0"
          },
          "answer": "2"
        }
      ]
    },
    {
      "type": 2,
      "level": "medium",
      "question": [
        {
          "question": "What does `let arr = [1, 2, 3]; console.log(arr.shift());` return?",
          "options": {
            "1": "1",
            "2": "3",
            "3": "[2, 3]",
            "4": "undefined"
          },
          "answer": "1"
        }
      ]
    },
    {
      "type": 2,
      "level": "medium",
      "question": [
        {
          "question": "What is the result of `let arr = [1, 2, 3, 4]; console.log(arr.slice(-2));`?",
          "options": {
            "1": "[1, 2]",
            "2": "[3, 4]",
            "3": "[2, 3]",
            "4": "[4]"
          },
          "answer": "2"
        }
      ]
    }
  ],
  "3": [
    {
      "type": 2,
      "level": "hard",
      "question": [
        {
          "question": "What is the result of `let arr = [1, 2, 3]; console.log(arr.push(4, 5));`?",
          "options": {
            "1": "[1, 2, 3, 4, 5]",
            "2": "5",
            "3": "[4, 5]",
            "4": "2"
          },
          "answer": "2"
        }
      ]
    },
    {
      "type": 2,
      "level": "hard",
      "question": [
        {
          "question": "What does `let arr = [1, 2, 3, 4]; console.log(arr.pop());` return?",
          "options": {
            "1": "1",
            "2": "4",
            "3": "[1, 2, 3]",
            "4": "undefined"
          },
          "answer": "2"
        }
      ]
    },
    {
      "type": 2,
      "level": "hard",
      "question": [
        {
          "question": "What is the result of `let arr = [1, 2, 3, 4]; console.log(arr.slice(1, 3));`?",
          "options": {
            "1": "[1, 2]",
            "2": "[2, 3]",
            "3": "[2, 3, 4]",
            "4": "[1, 2, 3]"
          },
          "answer": "2"
        }
      ]
    },
    {
      "type": 2,
      "level": "hard",
      "question": [
        {
          "question": "What happens when you execute `let arr = [1, 2, 3]; console.log(arr.splice(1, 1, 'a'));`?",
          "options": {
            "1": "['a']",
            "2": "[2]",
            "3": "[1, 'a', 3]",
            "4": "[1, 2, 3]"
          },
          "answer": "2"
        }
      ]
    },
    {
      "type": 2,
      "level": "hard",
      "question": [
        {
          "question": "What does `let arr = [1, 2, 3]; console.log(arr.map(x => x * 2));` return?",
          "options": {
            "1": "[2, 4, 6]",
            "2": "[1, 2, 3]",
            "3": "undefined",
            "4": "[1, 4, 9]"
          },
          "answer": "1"
        }
      ]
    },
    {
      "type": 1,
      "level": "hard",
      "question": [
        {
          "question": "Modifying an array declared with `const` will throw an error because the array is immutable.",
          "answer": false
        }
      ]
    },
    {
      "type": 1,
      "level": "hard",
      "question": [
        {
          "question": "Sparse arrays in JavaScript do not allocate memory for undefined indices.",
          "answer": true
        }
      ]
    },
    {
      "type": 2,
      "level": "hard",
      "question": [
        {
          "question": "What is the result of `let arr = [1, 2, 3]; console.log(arr.filter(x => x > 1));`?",
          "options": {
            "1": "[1]",
            "2": "[2, 3]",
            "3": "[1, 2, 3]",
            "4": "[]"
          },
          "answer": "2"
        }
      ]
    },
    {
      "type": 2,
      "level": "hard",
      "question": [
        {
          "question": "What does `let arr = [1, 2, 3]; console.log(arr.reduce((acc, x) => acc + x, 0));` return?",
          "options": {
            "1": "6",
            "2": "1",
            "3": "[1, 2, 3]",
            "4": "undefined"
          },
          "answer": "1"
        }
      ]
    },
    {
      "type": 2,
      "level": "hard",
      "question": [
        {
          "question": "What is the result of `let arr = [5, 10, 15]; console.log(arr.find(x => x > 10));`?",
          "options": {
            "1": "5",
            "2": "10",
            "3": "15",
            "4": "undefined"
          },
          "answer": "3"
        }
      ]
    },
    {
      "type": 2,
      "level": "hard",
      "question": [
        {
          "question": "What does `let arr = [1, 2, 3]; console.log(arr.some(x => x > 2));` return?",
          "options": {
            "1": "true",
            "2": "false",
            "3": "[3]",
            "4": "undefined"
          },
          "answer": "1"
        }
      ]
    },
    {
      "type": 1,
      "level": "hard",
      "question": [
        {
          "question": "The `.forEach()` method can modify the original array if the callback function alters its elements.",
          "answer": true
        }
      ]
    },
    {
      "type": 2,
      "level": "hard",
      "question": [
        {
          "question": "What is the result of `let arr = [1, 2, 3]; let copy = arr; copy[0] = 10; console.log(arr);`?",
          "options": {
            "1": "[1, 2, 3]",
            "2": "[10, 2, 3]",
            "3": "[]",
            "4": "undefined"
          },
          "answer": "2"
        }
      ]
    },
    {
      "type": 2,
      "level": "hard",
      "question": [
        {
          "question": "What does `let arr = [[1, 2], [3, 4]]; console.log(arr[1][0]);` return?",
          "options": {
            "1": "1",
            "2": "2",
            "3": "3",
            "4": "4"
          },
          "answer": "3"
        }
      ]
    },
    {
      "type": 2,
      "level": "hard",
      "question": [
        {
          "question": "What is the result of `let arr = []; arr[5] = 'x'; console.log(arr.length);`?",
          "options": {
            "1": "0",
            "2": "1",
            "3": "5",
            "4": "6"
          },
          "answer": "4"
        }
      ]
    }
  ]
}